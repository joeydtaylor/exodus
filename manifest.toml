# =========================
# Receivers → wires
# =========================

[[receiver]]
address = "0.0.0.0:50053"
buffer_size = 1024
aes256_key_hex = "ea8ccb51eefcdd058b0110c4adebaf351acbf43db2ad250fdc0d4131c959dfec"

  [receiver.tls]
  enable = true
  server_cert = "/app/etc/keys/tls/server.crt"
  server_key  = "/app/etc/keys/tls/server.key"
  ca          = "/app/etc/keys/tls/ca.crt"
  server_name = "localhost"

  [receiver.oauth]
  mode = "merge"
  issuer_base = "https://damocles:3000"
  jwks_url = "https://damocles:3000/api/auth/.well-known/jwks.json"
  required_aud = ["your-api"]
  required_scopes = ["write:data"]
  jwks_cache_seconds = 300
  introspect_url = "https://damocles:3000/api/auth/oauth/introspect"
  auth_type = "basic"
  client_id = "steeze-local-cli"
  client_secret = "local-secret"
  cache_seconds = 300

  [[receiver.pipeline]]
  datatype     = "feedback.v1"
  transformers = ["sentiment", "tagger"]
  output       = "wireA"

[[receiver]]
address = "0.0.0.0:50054"
buffer_size = 1024
aes256_key_hex = "ea8ccb51eefcdd058b0110c4adebaf351acbf43db2ad250fdc0d4131c959dfec"

  [receiver.tls]
  enable = true
  server_cert = "/app/etc/keys/tls/server.crt"
  server_key  = "/app/etc/keys/tls/server.key"
  ca          = "/app/etc/keys/tls/ca.crt"
  server_name = "localhost"

  [receiver.oauth]
  mode = "merge"
  issuer_base = "https://damocles:3000"
  jwks_url = "https://damocles:3000/api/auth/.well-known/jwks.json"
  required_aud = ["your-api"]
  required_scopes = ["write:data"]
  jwks_cache_seconds = 300
  introspect_url = "https://damocles:3000/api/auth/oauth/introspect"
  auth_type = "basic"
  client_id = "steeze-local-cli"
  client_secret = "local-secret"
  cache_seconds = 300

  [[receiver.pipeline]]
  datatype     = "feedback.v1"
  transformers = ["tagger"]
  output       = "wireB"

# =========================
# Sink: S3 parquet (wireA)
# =========================

[[sink]]
type   = "s3"
name   = "debug-s3"
inputs = ["wireA"]

  [sink.s3]
  bucket            = "steeze-dev"
  prefix_template   = "debug/{yyyy}/{MM}/{dd}/{HH}/"
  format            = "parquet"
  minute_partitions = false

    [sink.s3.batch]
    max_records = 200000
    max_bytes   = 134217728
    max_age_ms  = 60000

    [sink.s3.parquet]
    compression      = "zstd"
    roll_window_ms   = 60000
    roll_max_records = 200000

    [sink.s3.sse]
    type = "aes256"   # switch to "kms" + key_id in real AWS

    [sink.s3.aws]
    region                   = "us-east-1"
    role_arn                 = ""   # keep AssumeRole disabled with LocalStack
    session_name             = ""
    duration_minutes         = 0
    endpoint_url             = "http://localstack:4566"
    use_path_style           = true
    static_access_key_id     = "test"
    static_secret_access_key = "test"
    insecure_skip_tls_verify = true

# ======================================
# Sink: Kafka (wireB) — TLS + SASL
# ======================================

[[sink]]
type   = "kafka"
name   = "debug-kafka"
inputs = ["wireB"]

  [sink.kafka]
  brokers      = ["redpanda:9093"]   # internal TLS listener
  topic        = "feedback-demo"
  format       = "ndjson"
  key_template = "{customerId}"
  headers      = { source = "exodus", schema = "feedback.v1" }

    [sink.kafka.batch]
    max_records             = 10000
    max_bytes_mb            = 16
    max_age_ms              = 800
    writer_batch_timeout_ms = 400

    [sink.kafka.security]
    client_id      = "exodus-kafka-writer"
    sasl_mechanism = "SCRAM-SHA-256"
    username       = "app"
    password       = "app-secret"

    # TLS for broker auth (no client certs required)
    [sink.kafka.tls]
    enable               = true
    ca                   = "/app/etc/keys/tls/ca.crt"
    server_name          = "localhost"
    insecure_skip_verify = false
